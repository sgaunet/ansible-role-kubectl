---

- name: Check kubectl version
  become: false
  ansible.builtin.shell: 'set -o pipefail && kubectl version --short  2>/dev/null | head -n1 | sed "s#Client Version: v##g"'
  args:
    executable: /bin/bash
  register: kubectl_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check kubectl version # noqa command-instead-of-shell
  ansible.builtin.command: '/bin/true'
  changed_when: kubectl_version_client_installed.stdout != kubectl_version
  check_mode: false

# https://kubernetes.io/releases/
- name: Download and unarchive kubectl
  ansible.builtin.get_url:
    url: "https://dl.k8s.io/v{{ kubectl_version }}/bin/{{ kubectl_os }}/{{ kubectl_arch }}/kubectl"
    dest: "{{ kubectl_bin_path }}"
    mode: "0755"
  when:
    - not ansible_check_mode
    - kubectl_version != kubectl_version_client_installed.stdout

- name: Register kubectl completion bash
  ansible.builtin.shell: 'kubectl completion bash'
  args:
    executable: /bin/bash
  register: kubectl_completion
  changed_when: false
  check_mode: false
  when:
    - kubectl_version == kubectl_version_client_installed.stdout

# - debug:
#     msg: "{{ kubectl_completion }}"

- name: Check existence of /etc/bash_completion.d
  ansible.builtin.stat:
    path: /etc/bash_completion.d
  register: bash_completion_d_stat

- name: Create completion bash file
  ansible.builtin.copy:
    content: "{{ kubectl_completion.stdout }}"
    dest: /etc/bash_completion.d/kubectl
    owner: root
    group: root
    mode: '0755'
  changed_when: false
  when:
    - kubectl_version == kubectl_version_client_installed.stdout
    - bash_completion_d_stat.stat.exists
